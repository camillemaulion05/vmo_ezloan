// Footer
if title.indexOf("Manage") === -1
  footer.footer
    .container
      .row.align-items-center
        - let now = new Date
        - let theYear=now.getYear()
        - if (theYear < 1900) theYear=theYear+1900
        .col-lg-4.text-lg-left Copyright &copy; VMO EZ Loan #{theYear}
        .col-lg-4.my-3.my-lg-0.quicklinks
          a.btn.btn-dark.btn-social.mx-2(href='#!')
            i.fab.fa-twitter
          a.btn.btn-dark.btn-social.mx-2(href='#!')
            i.fab.fa-facebook-f
          a.btn.btn-dark.btn-social.mx-2(href='#!')
            i.fab.fa-linkedin-in
        .col-lg-4.text-lg-right
          a.mr-3(href='#!') Privacy Policy
          a(href='#!') Terms of Use
else
  a.scroll-to-top.rounded(href='#page-top')
    i.fas.fa-angle-up
  #logoutModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='logoutModalLabel' aria-hidden='true')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          h5#logoutModalLabel.modal-title Ready to Leave?
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body Select "Logout" below if you are ready to end your current session.
        .modal-footer
          button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
          a.btn.btn-primary(href='/logout') Logout
  if title.indexOf("Borrowers") != -1
    - let type = ["Non-Member", "Member"]
    - let status = ["Basic", "Pending for Review", "Verified", "Declined"]
    - let employmentType = ["Regular", "Probation", "Contractual", "Project Based", "Part-Time", "Self-Employed/Freelancer"]
    #addBorrowerModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='addBorrowerModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#addBorrowerModalLabel.modal-title Add New Borrower
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addBorrower(method='POST' action='/borrowers')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerType') Borrower Type
                  select#borrowerType.form-control.selectpicker(type='text' name='type')
                    option(value='' selected='') Borrower Type
                    for x in type
                      option(value=x) #{x}
                .col-md-6 
                  label.small.mb-1(for='borrowerStatus') Status
                  select#borrowerStatus.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='') Status
                    for x in status
                      option(value=x) #{x}
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerFirstName') First name
                  input#borrowerFirstName.form-control(type='text' name='firstName')
                .col-md-6
                  label.small.mb-1(for='borrowerLastName') Last name
                  input#borrowerLastName.form-control(type='text' name='lastName')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerGender') Gender
                  select#borrowerGender.form-control.selectpicker(type='text' name='gender')
                    option(value='' selected='') Gender
                    - let gender = ['Female', 'Male']
                    for x in gender
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='borrowerDateOfBirth') Birthdate
                  input#borrowerDateOfBirth.form-control(type='date' name='dateOfBirth')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerEmail') Email address
                  input#borrowerEmail.form-control(type='email' name='email')
                .col-md-6
                  label.small.mb-1(for='borrowerMobileNum') Mobile Number
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    input#borrowerMobileNum.form-control(type='text' name='mobileNum')
              .form-row.mb-2.membersOnly.d-none
                .col-md-6
                  label.small.mb-1(for='borrowerEmployeeID') Employee ID
                  input#borrowerEmployeeID.form-control(type='text' name='employeeID')
                .col-md-6
                  label.small.mb-1(for='borrowerShares') Shares/Payday (Php)
                  input#borrowerShares.form-control(type="number" step="300" min="0" name='sharesPerPayDay')
              .form-row.mb-2.verifiedOnly.d-none
                .col-md-6
                  label.small.mb-1(for='borrowerTotalCreditLimit') Total Credit Limit
                  input#borrowerTotalCreditLimit.form-control(type="number" step="500" min="0" name='totalCreditLimit')
                .col-md-6
                  label.small.mb-1(for='borrowerReviewedBy') Assigned Reviewer
                  select#borrowerReviewedBy.form-control.selectpicker(type='text' name='reviewedBy')
                    option(value='' selected='') Assigned Reviewer
                    for x in employees
                      if (x.type != 'HRD Authorized Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
              .form-row.mb-2.verifiedMemberOnly.d-none
                .col-md-6
                  label.small.mb-1(for='borrowerHrCertifiedBy') HRD Authorized Officer
                  select#borrowerHrCertifiedBy.form-control.selectpicker(type='text' name='hrCertifiedBy')
                    option(value='' selected='') HRD Authorized Officer
                    for x in employees
                      if (x.type == 'HRD Authorized Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='borrowerEmploymentType') Employment Status
                  select#borrowerEmploymentType.form-control.selectpicker(type='text' name='employmentType')
                    option(value='' selected='') Employment Status
                    for x in employmentType
                      option(value=x) #{x}
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #deleteBorrowerModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteBorrowerModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteBorrowerModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete borrower 
              span#deleteBorrowerName
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteBorrower.btn.btn-primary(href='') Yes, delete it
    #updateBorrowerModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateBorrowerModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateBorrowerModalLabel.modal-title 
              | Update 
              span#updateBorrowerName
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateBorrower(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='type') Borrower Type
                  select#type.form-control.selectpicker(type='text' name='type')
                    option(value='' selected='' disabled='') Borrower Type
                    for x in type
                      option(value=x) #{x}
                .col-md-6 
                  label.small.mb-1(for='status') Status
                  select#status.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='' disabled='') Status
                    for x in status
                      option(value=x) #{x}
              .form-row.mb-2.membersOnly
                .col-md-6
                  label.small.mb-1(for='employeeID') Employee ID
                  input#employeeID.form-control(type='text' name='employeeID')
                .col-md-6
                  label.small.mb-1(for='sharesPerPayDay') Shares/Payday (Php)
                  input#sharesPerPayDay.form-control(type="number" step="300" min="0" name='sharesPerPayDay')
              .form-row.mb-2.verifiedOnly
                .col-md-6
                  label.small.mb-1(for='totalCreditLimit') Total Credit Limit
                  input#totalCreditLimit.form-control(type="number" step="500" min="0" name='totalCreditLimit')
                .col-md-6
                  label.small.mb-1(for='reviewedBy') Assigned Reviewer
                  select#reviewedBy.form-control.selectpicker(type='text' name='reviewedBy')
                    option(value='' selected='') Assigned Reviewer
                    for x in employees
                      if (x.type == 'Loan Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
              .form-row.mb-2.verifiedMemberOnly
                .col-md-6
                  label.small.mb-1(for='hrCertifiedBy') HRD Authorized Officer
                  select#hrCertifiedBy.form-control.selectpicker(type='text' name='hrCertifiedBy')
                    option(value='' selected='') HRD Authorized Officer
                    for x in employees
                      if (x.type == 'HRD Authorized Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='employmentType') Employment Status
                  select#employmentType.form-control.selectpicker(type='text' name='employmentType')
                    option(value='' selected='') Employment Status
                    for x in employmentType
                      option(value=x) #{x}
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit

  if title.indexOf("Manage Transactions") != -1
    #deleteTransactionModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteTransactionModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteTransactionModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete transaction no.  
              span#deleteTransactionNum 
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteTransaction.btn.btn-primary(href='') Yes, delete it

  if title.indexOf("Manage Loans") != -1
    - let loanTerm = ["6", "12", "18", "24", "30", "36", "42", "48", "54", "60"]
    - let purposeOfLoan = ["Living Cost","Educational","Medical or Hospitalization","Purchasing Appliance","Travel or Vacation","Entertainment","Own Business","Wedding","House Repair","Repayments","Others"]
    #addLoanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='addLoanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#addLoanModalLabel.modal-title Add New Loan
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addLoan(method='POST' action='/loans')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='name') Borrower Name
                  select#name.form-control.selectpicker(type='text' name='borrowerID')
                    option(value='' selected='') Borrower Name
                    for x in borrowers
                      if (x.status == 'Verified')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='type') Borrower Type
                  input#type.form-control(type='text' name='borrowerType')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='loanPurpose') Purpose of Loan
                  select#loanPurpose.form-control.selectpicker(type='text' name='purposeOfLoan')
                    option(value='' selected='') Purpose of Loan
                    for x in purposeOfLoan
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='amount') Loan Amount
                  input#amount.form-control(type="number" step="500" min="0" name='loanAmount')
              .form-row.mb-2.processingOnly
                .col-md-6
                  label.small.mb-1(for='interest') Monthly Interest Rate
                  input#interest.form-control(type="number" step="1" min="3" name='monthlyInterestRate' disabled='')
                .col-md-6
                  label.small.mb-1(for='term') Loan Term
                  select#term.form-control.selectpicker(type='text' name='loanTerm')
                    option(value='' selected='') Loan Term
                    for x in loanTerm
                      option(value=x) #{x} months
              .form-row.mb-2
                .col-md-6 
                  label.small.mb-1(for='loanStatus') Status
                  select#loanStatus.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='') Status
                    - let loanStat = ["Processing", "Approved", "Declined", "Loan Release"]
                    for x in loanStat
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='loanReviewedBy') Assigned Reviewer
                  select#loanReviewedBy.form-control.selectpicker(type='text' name='reviewedBy')
                    option(value='' selected='') Assigned Reviewer
                    for x in employees
                      if (x.type == 'Loan Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #deleteLoanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteLoanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteLoanModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete loan no.  
              span#deleteLoanNum 
              |  of 
              span#deleteBorrowerName
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteLoan.btn.btn-primary(href='') Yes, delete it
    #updateLoanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateLoanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateLoanModalLabel.modal-title 
              | Update 
              span#updateLoanNum
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateLoan(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerName') Borrower Name
                  select#borrowerName.form-control.selectpicker(type='text' name='borrowerID' disabled='')
                    option(value='' selected='') Borrower Name
                    for x in borrowers
                      if (x.status == 'Verified')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='borrowerType') Borrower Type
                  input#borrowerType.form-control(type='text' name='borrowerType' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='purposeOfLoan') Purpose of Loan
                  select#purposeOfLoan.form-control.selectpicker(type='text' name='purposeOfLoan')
                    option(value='' selected='' disabled='') Purpose of Loan
                    for x in purposeOfLoan
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='loanAmount') Loan Amount
                  input#loanAmount.form-control(type="number" step="500" min="0" name='loanAmount')
              .form-row.mb-2.processingOnly
                .col-md-6
                  label.small.mb-1(for='monthlyInterestRate') Monthly Interest Rate
                  input#monthlyInterestRate.form-control(type="number" step="1" min="3" name='monthlyInterestRate' disabled='')
                .col-md-6
                  label.small.mb-1(for='loanTerm') Loan Term
                  select#loanTerm.form-control.selectpicker(type='text' name='loanTerm')
                    option(value='' selected='' disabled='') Loan Term
                    for x in loanTerm
                      option(value=x) #{x} months
              .form-row.mb-2
                .col-md-6 
                  label.small.mb-1(for='status') Status
                  select#status.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='' disabled='') Status
                     - let status = ["Processing", "Approved", "Declined", "Loan Release", "Open", "Fully Paid", "Loan Debt"]
                    for x in status
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='reviewedBy') Assigned Reviewer
                  select#reviewedBy.form-control.selectpicker(type='text' name='reviewedBy')
                    option(value='' selected='') Assigned Reviewer
                    for x in employees
                      if (x.type == 'Loan Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
  if title.indexOf("Profile") != -1
    #codeModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='codeModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#codeModalLabel.modal-title Mobile Number Verification
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form(method='POST' action='/verifyMobileNum')
            input(type='hidden', name='_csrf', value=_csrf)
            input(type='hidden', name='mobileNum', value=user.profile.mobileNum)
            .modal-body
              p VMO EZ Loan will send a text message with a 6-digit verification code.
              .form-row
                .form-group
                  input#code.form-control(type='text' placeholder='Enter code' name='code')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Verify
  if title.indexOf("Account Management - Loans") != -1
    #loanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='loanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#loanModalLabel.modal-title Loan Application
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form(method='POST' action='/credits')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              - let interestRate = (user.type == "Member") ? 3: 5;
              - let totalUsedCreditLimit = (loans) ? loans.filter(({status}) => status != "Declined").reduce((a, b) => parseFloat(a) + parseFloat(b.principalRemaining), 0) : '0.00';
              - let remainingCreditLimit = parseFloat(user.totalCreditLimit) - parseFloat(totalUsedCreditLimit);
              p 
                | The amount that you can borrow varies depending on your submitted documents and credit evaluation. 
                br
                | Continuing Interest of #{interestRate}% per month against Outstanding Balance after the loan terms.
              .form-row.mb-2
                input#loanAmount.form-control(type="number" step="500" min="0" max=remainingCreditLimit name='loanAmount' value=remainingCreditLimit)
              .form-row.mb-2
                select#purposeOfLoan.form-control.selectpicker(type='text' name='purposeOfLoan')
                  option(value='' selected='' disabled='') Purpose of Loan
                  - let purposeOfLoan = ["Living Cost","Educational","Medical or Hospitalization","Purchasing Appliance","Travel or Vacation","Entertainment","Own Business","Wedding","House Repair","Repayments","Others"]
                  for x in purposeOfLoan
                    option(value=x) #{x}
              .form-row.mb-2
                select#loanTerm.form-control.selectpicker(type='text' name='loanTerm')
                  option(value='' selected='' disabled='') Loan Term
                  - let loanTerm = ["6", "12", "18", "24", "30", "36", "42", "48", "54", "60"]
                  for x in loanTerm
                    option(value=x) #{x} months
              .form-row.mb-2
                .custom-control.custom-checkbox
                  input#termsAndCondition.custom-control-input(type='checkbox' name='termsAndCondition' value='false')
                  label.custom-control-label(for='termsAndCondition')
                    | I agree with the 
                    a Terms and Conditions
                    |  of VMO EZ Loan.
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
  if title.indexOf("Account Management - Loan Details") != -1
    #repaymentModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='repaymentModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#repaymentModalLabel.modal-title Add Repayment
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#repayment(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              p 
                | You can pay your repayment thru Bank Transfer or G-Cash. Check account numbers below.
                br
                | Please note your confirmation/reference number.
              .form-row.mb-2
                -let amountDue = (schedule.amountDue) ? (schedule.paymentAmount) ? (parseFloat(schedule.amountDue) - parseFloat(schedule.paymentAmount) < 0.00) ? '0.00' : parseFloat(schedule.amountDue) - parseFloat(schedule.paymentAmount) : (parseFloat(schedule.amountDue)).toFixed(2) : '0.00'
                input#amount.form-control(type="text" name='amount' value=amountDue)
              .form-row.mb-2
                input#senderNum.form-control(type="text" name='senderNum' placeholder='Your Account No.')
              .form-row.mb-2
                select#method.form-control.selectpicker(type='text' name='method')
                  option(value='' selected='' disabled='') MOP
                  option(value='Bank Transfer') Bank Transfer
                  option(value='G-Cash') G-Cash
              .form-row.mb-2
                input#receiverNum.form-control(type="text" name='receiverNum' placeholder='Receiver Account No.' disabled)
              .form-row.mb-2
                input#referenceNo.form-control(type="text" name='referenceNo' placeholder='Reference No.')
              .form-row.mb-2
                textarea#message.form-control(name='message' placeholder='Your Message')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
  if title.indexOf("KYC Declaration") != -1
    #signatureModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='signatureModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#signatureModalLabel.modal-title Signature
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form
            .modal-body
              .text-center
                #sig
            .modal-footer
              button#clear.btn.btn-secondary(type='button') Clear
              button#redrawButton.btn.btn-primary(type='button' data-dismiss='modal') Done
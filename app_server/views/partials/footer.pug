// Footer
if title.indexOf("Manage") === -1
  footer.footer
    .container
      .row.align-items-center
        - let now = new Date
        - let theYear=now.getYear()
        - if (theYear < 1900) theYear=theYear+1900
        .col-lg-4.text-lg-left Copyright &copy; VMO EZ Loan #{theYear}
        .col-lg-4.my-3.my-lg-0.quicklinks
          a.btn.btn-dark.btn-social.mx-2(href='#!')
            i.fab.fa-twitter
          a.btn.btn-dark.btn-social.mx-2(href='#!')
            i.fab.fa-facebook-f
          a.btn.btn-dark.btn-social.mx-2(href='#!')
            i.fab.fa-linkedin-in
        .col-lg-4.text-lg-right
          a.mr-3(href='/privacy-policy') Privacy Policy
          a(href='/terms-and-conditions') Terms of Use
else
  a.scroll-to-top.rounded(href='#page-top')
    i.fas.fa-angle-up
  #logoutModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='logoutModalLabel' aria-hidden='true')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          h5#logoutModalLabel.modal-title Ready to Leave?
          button.close(type='button' data-dismiss='modal' aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body Select "Logout" below if you are ready to end your current session.
        .modal-footer
          button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
          a.btn.btn-primary(href='/logout') Logout
  
  if title.indexOf("Manage Borrowers") != -1
    - let type = ["Non-Member", "Member"]
    - let status = ["Basic", "Verified", "Declined"]
    - let employmentType = ["Regular", "Probation", "Unaffiliated"]
    #addBorrowerModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='addBorrowerModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#addBorrowerModalLabel.modal-title Add New Borrower
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addBorrower(method='POST' action='/borrowers')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerType') Borrower Type
                  select#borrowerType.form-control.selectpicker(type='text' name='type')
                    option(value='' selected='') Borrower Type
                    for x in type
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='borrowerMobileNum') Mobile Number
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    input#borrowerMobileNum.form-control(type='text' name='mobileNum' minlength='10' maxlength='10')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerFirstName') First name
                  input#borrowerFirstName.form-control(type='text' name='firstName')
                .col-md-6
                  label.small.mb-1(for='borrowerLastName') Last name
                  input#borrowerLastName.form-control(type='text' name='lastName')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerGender') Gender
                  select#borrowerGender.form-control.selectpicker(type='text' name='gender')
                    option(value='' selected='') Gender
                    - let gender = ['Female', 'Male']
                    for x in gender
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='borrowerDateOfBirth') Birthdate
                  input#borrowerDateOfBirth.form-control(type='date' name='dateOfBirth')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerEmail') Email address
                  input#borrowerEmail.form-control(type='email' name='email')
                .col-md-6
                  label.small.mb-1(for='username') Username
                  input#username.form-control(type='text' name='username' disabled='')
              .form-row.mb-2.membersOnly.d-none
                .col-md-6
                  label.small.mb-1(for='borrowerEmployeeID') Employee ID
                  input#borrowerEmployeeID.form-control(type='text' name='employeeID')
                .col-md-6
                  label.small.mb-1(for='borrowerShares') Shares/Payday
                  input#borrowerShares.form-control(type="number" step="100" min="300" name='sharesPerPayDay')
              .form-row.mb-2.membersOnly.d-none
                .col-md-6
                  label.small.mb-1(for='amount') Total Payment
                  input#amount.form-control(type="number" step="100" min="1000" name='amount' value="1000" disabled='')
                .col-md-6
                  label.small.mb-1(for='borrowerAcctNo') Borrower G-Cash No.
                  .input-group.mb-1
                    .input-group-prepend
                      span.input-group-text +63
                    input#borrowerAcctNo.form-control(type='text' name='borrowerAcctNo' minlength='10' maxlength='10')
              .form-row.mb-2.membersOnly.d-none
                .col-md-6
                  label.small.mb-1(for='postedBy') Assigned Loan Processor
                  select#postedBy.form-control.selectpicker(type='text' name='postedBy')
                    option(value='' selected='') Assigned Loan Processor
                    for x in employees
                      if (x.type == 'Loan Processor')
                        - let mobileNum = (x.account && x.account.number) ? x.account.number : x.profile.mobileNum;
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName} - #{mobileNum} 
                .col-md-6
                  label.small.mb-1(for='referenceNo') G-Cash Reference No.
                  input#referenceNo.form-control(type='text' name='referenceNo' minlength='10' maxlength='10')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #deleteBorrowerModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteBorrowerModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteBorrowerModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete borrower 
              span#deleteBorrowerName
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteBorrower.btn.btn-primary(href='') Yes, delete it
    #updateBorrowerModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateBorrowerModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateBorrowerModalLabel.modal-title 
              | Update 
              span#updateBorrowerName
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateBorrower(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='type') Borrower Type
                  select#type.form-control.selectpicker(type='text' name='type' disabled='')
                    option(value='' selected='' disabled='') Borrower Type
                    for x in type
                      option(value=x) #{x}
                .col-md-6 
                  label.small.mb-1(for='status') Status
                  select#status.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='' disabled='') Status
                    for x in status
                      option(value=x) #{x}
              .form-row.mb-2.membersOnly.d-none
                .col-md-6
                  label.small.mb-1(for='employeeID') Employee ID
                  input#employeeID.form-control(type='text' name='employeeID' disabled='')
                .col-md-6
                  label.small.mb-1(for='sharesPerPayDay') Shares/Payday
                  input#sharesPerPayDay.form-control(type="number" step="100" min="0" name='sharesPerPayDay')
              .form-row.mb-2.withCreditLimitOnly.d-none
                .col-md-6
                  label.small.mb-1(for='totalUsedCreditLimit') Total Used Credit Limit
                  input#totalUsedCreditLimit.form-control(type="text" name='totalUsedCreditLimit' disabled='')
                .col-md-6
                  label.small.mb-1(for='remainingCreditLimit') Remaining Credit Limit
                  input#remainingCreditLimit.form-control(type="text" name='remainingCreditLimit' disabled='')
              .form-row.mb-2.verifiedOnly.d-none
                .col-md-6
                  label.small.mb-1(for='totalCreditLimit') Total Credit Limit
                  input#totalCreditLimit.form-control(type="number" step="500" min="0" name='totalCreditLimit')
                .col-md-6
                  label.small.mb-1(for='reviewedBy') Assigned Loan Officer
                  select#reviewedBy.form-control.selectpicker(type='text' name='reviewedBy')
                    option(value='' selected='') Assigned Loan Officer
                    for x in employees
                      if (x.type == 'Loan Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
              .form-row.mb-2.verifiedMemberOnly.d-none
                .col-md-6
                  label.small.mb-1(for='hrCertifiedBy') HRD Authorized Officer
                  select#hrCertifiedBy.form-control.selectpicker(type='text' name='hrCertifiedBy')
                    option(value='' selected='') HRD Authorized Officer
                    for x in employees
                      if (x.type == 'HRD Authorized Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='employmentType') Employment Type
                  select#employmentType.form-control.selectpicker(type='text' name='employmentType')
                    option(value='' selected='') Employment Type
                    for x in employmentType
                      option(value=x) #{x}
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit

  if title.indexOf("Manage Inquiries") != -1
    #deleteInquiryModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteInquiryModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteInquiryModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete inquiry no.  
              span#deleteInquiryNum 
              |  of 
              span#deleteInquiryName
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteInquiry.btn.btn-primary(href='') Yes, delete it
    #updateInquiryModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateInquiryModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateInquiryModalLabel.modal-title Reply to Inquiry No. 
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateInquiry(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='name') Full name
                  input#name.form-control(type='text' name='name' disabled='')
                .col-md-6
                  label.small.mb-1(for='email') Email address
                  input#email.form-control(type='email' name='email' disabled='')
              .form-row.mb-2
                .col-md-12
                  label.small.mb-1(for='message') Message
                  textarea#message.form-control(name='message' disabled='')
              .form-row.mb-2
                .col-md-12
                  label.small.mb-1(for='response') Response
                  textarea#response.form-control(name='response')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit

  if title.indexOf("Manage Employees") != -1
    - let type = ["Loan Officer", "Loan Processor", "HRD Authorized Officer", "Admin"]
    - let gender = ['Female', 'Male']
    #deleteEmployeeModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteEmployeeModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteEmployeeModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete employee 
              span#deleteEmployeeName
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteEmployee.btn.btn-primary(href='') Yes, delete it
    #updateEmployeeModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateEmployeeModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateEmployeeModalLabel.modal-title 
              | Update Employee No. 
              span#updateEmployeeName
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateEmployee(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='type') Employee Type
                  select#type.form-control.selectpicker(type='text' name='type' disabled='')
                    option(value='' selected='') Employee Type
                    for x in type
                      option(value=x) #{x}
                .col-md-6 
                  label.small.mb-1(for='employeeID') Employee ID
                  input#employeeID.form-control(type='text' name='employeeID')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='firstName') First name
                  input#firstName.form-control(type='text' name='firstName')
                .col-md-6
                  label.small.mb-1(for='lastName') Last name
                  input#lastName.form-control(type='text' name='lastName')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='gender') Gender
                  select#gender.form-control.selectpicker(type='text' name='gender')
                    option(value='' selected='') Gender
                    for x in gender
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='dateOfBirth') Birthdate
                  input#dateOfBirth.form-control(type='date' name='dateOfBirth')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='email') Email address
                  input#email.form-control(type='email' name='email')
                .col-md-6
                  label.small.mb-1(for='mobileNum') Mobile Number
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    input#mobileNum.form-control(type='text' name='mobileNum' minlength='10' maxlength='10')
              .form-row.mb-2.loanProcessorOnly.d-none
                .col-md-6
                  label.small.mb-1(for='accountName') G-Cash Account Name
                  input#accountName.form-control(type='text' name='accountName')
                .col-md-6
                  label.small.mb-1(for='accountNum') G-Cash Account No.
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    input#accountNum.form-control(type='text' name='accountNum' minlength='10' maxlength='10')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #addEmployeeModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='addEmployeeModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#addEmployeeModalLabel.modal-title Add Employee
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addEmployee(method='POST' action='/employees')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='empType') Employee Type
                  select#empType.form-control.selectpicker(type='text' name='type')
                    option(value='' selected='') Employee Type
                    for x in type
                      option(value=x) #{x}
                .col-md-6 
                  label.small.mb-1(for='empID') Employee ID
                  input#empID.form-control(type='text' name='employeeID')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='empFirstName') First name
                  input#empFirstName.form-control(type='text' name='firstName')
                .col-md-6
                  label.small.mb-1(for='empLastName') Last name
                  input#empLastName.form-control(type='text' name='lastName')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='empGender') Gender
                  select#empGender.form-control.selectpicker(type='text' name='gender')
                    option(value='' selected='') Gender
                    for x in gender
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='empDateOfBirth') Birthdate
                  input#empDateOfBirth.form-control(type='date' name='dateOfBirth')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='empEmail') Email address
                  input#empEmail.form-control(type='email' name='email')
                .col-md-6
                  label.small.mb-1(for='empMobileNum') Mobile Number
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    input#empMobileNum.form-control(type='text' name='mobileNum' minlength='10' maxlength='10')
              .form-row.mb-2.loanProcessorOnly.d-none
                .col-md-6
                  label.small.mb-1(for='empAccountName') G-Cash Account Name
                  input#empAccountName.form-control(type='text' name='accountName')
                .col-md-6
                  label.small.mb-1(for='empAccountNum') G-Cash Account No.
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    input#empAccountNum.form-control(type='text' name='accountNum' minlength='10' maxlength='10')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit

  if title.indexOf("Manage Withdrawal Requests") != -1
    #addWithdrawalModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='addWithdrawalModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#addWithdrawalModalLabel.modal-title Add New Withdrawal Request
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addWithdrawal(method='POST' action='/withdrawals')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='receiverName') Borrower Name
                  select#receiverName.form-control.selectpicker(type='text' name='receiverName')
                    option(value='' selected='') Borrower Name
                    for x in borrowers
                      if (x.type == 'Member')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='contributions') Total Contributions
                  input#contributions.form-control(type='number' min='0' name='contributions' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='reason') Reason
                  select#reason.form-control.selectpicker(type='text' name='reason')
                    option(value='' selected='') Reason
                    - let reasons = ["Living Cost", "Educational", "Medical/Hospitalization","Purchasing Appliance","Travel/Vacation","Entertainment","Own Business","Wedding","House Repair","Repayments","Others"]
                    for x in reasons
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='amount') Amount
                  input#amount.form-control(type="number" step="0.01" min="0.00" name='amount')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #deleteWithdrawalModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteWithdrawalModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteWithdrawalModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete withdrawal request no.  
              span#deleteWithrawalNum 
              |  of 
              span#deleteBorrowerName
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteWithrawal.btn.btn-primary(href='') Yes, delete it
    #updateWithdrawalModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateWithdrawalModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateWithdrawalModalLabel.modal-title 
              span#updateTitle Update 
              span#updateWithdrawalNum
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateWithdrawal(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerName') Borrower Name
                  input#borrowerName.form-control(type='text' name='borrowerName' disabled='')
                .col-md-6
                  label.small.mb-1(for='shares') Total Contributions
                  input#shares.form-control(type='number' min='0' name='shares' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='withdrawReason') Reason
                  input#withdrawReason.form-control(type='text' name='reason' disabled='')
                .col-md-6
                  label.small.mb-1(for='withdrawAmount') Amount
                  input#withdrawAmount.form-control(type='number' min='0' name='amount' disabled='')
              .form-row.mb-2
                .col-md-6 
                  label.small.mb-1(for='status') Status
                  select#status.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='') Status
                     - let status =  ["Processing", "Approved", "Declined", "Cash Release"]
                    for x in status
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='reviewedBy') Assigned Loan Officer
                  select#reviewedBy.form-control.selectpicker(type='text' name='reviewedBy')
                    option(value='' selected='') Assigned Loan Officer
                    for x in employees
                      if (x.type == 'Loan Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
              .form-row.mb-2.addTransactionOnly.d-none
                .col-md-6
                  label.small.mb-1(for='postedBy') Assigned Loan Processor
                  select#postedBy.form-control.selectpicker(type='text' name='postedBy')
                    option(value='' selected='') Assigned Loan Processor
                    for x in employees
                      if (x.type == 'Loan Processor')
                        - let mobileNum = (x.account && x.account.number) ? x.account.number : x.profile.mobileNum;
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName} - #{mobileNum} 
                .col-md-6
                  label.small.mb-1(for='referenceNo') G-Cash Reference No.
                  input#referenceNo.form-control(type='text' name='referenceNo' minlength='10' maxlength='10')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit

  if title.indexOf("Manage Transactions") != -1
    #deleteTransactionModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteTransactionModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteTransactionModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p#deleteTransactionMsg Are you sure you want to delete transaction no.? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteTransaction.btn.btn-primary(href='') Yes, delete it
    #updateTransactionModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateTransactionModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateTransactionModalLabel.modal-title 
              span#updateTitle Update 
              span#updateTxnNum
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateTxn(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='type') Transaction Type
                  input#type.form-control(type='text' name='type' disabled='')
                .col-md-6
                  label.small.mb-1(for='amount') Amount
                  input#amount.form-control(type='text' name='amount' disabled='')
              .form-row.mb-2.notExpensesType
                .col-md-6
                  label.small.mb-1(for='borrowerName') Borrower Name
                  select#borrowerName.form-control.selectpicker(type='text' name='borrowerName' disabled='')
                    option(value='' selected='') Borrower Name
                    for x in borrowers
                      option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='borrowerAcctNo') Borrower G-Cash No.
                  .input-group.mb-1
                    .input-group-prepend
                      span.input-group-text +63
                    input#borrowerAcctNo.form-control(type='text' name='borrowerAcctNo' minlength='10' maxlength='10' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='postedBy') Assigned Loan Processor
                  select#postedBy.form-control.selectpicker(type='text' name='postedBy' disabled='')
                    option(value='' selected='') Assigned Loan Processor
                    for x in employees
                      if (x.type == 'Loan Processor')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='processorAcctNo') Loan Processor G-Cash No.
                  .input-group.mb-1
                    .input-group-prepend
                      span.input-group-text +63
                    input#processorAcctNo.form-control(type='text' name='processorAcctNo' minlength='10' maxlength='10' disabled='')
              .form-row.mb-2.messageOnly
                .col-md-12
                  label.small.mb-1(for='message') Message
                  textarea#message.form-control(name='message' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='referenceNo') G-Cash Reference No.
                  input#referenceNo.form-control(type='text' name='referenceNo' minlength='10' maxlength='10' disabled='')
                .col-md-6 
                  label.small.mb-1(for='status') Status
                  select#status.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='') Status
                     - let status = ["Processing", "Posted"]
                    for x in status
                      option(value=x) #{x}
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #addTransactionModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='addTransactionModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#addTransactionModalLabel.modal-title Add New Transaction
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addTransaction(method='POST' action='/transactions')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='txnType') Transaction Type
                  select#txnType.form-control.selectpicker(type='text' name='type')
                    option(value='' selected='') Transaction Type
                    - let type = ["Contributions", "Expenses"]
                    for x in type
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='txnAmount') Amount
                  input#txnAmount.form-control(type='number' step="0.01" min='0.00' name='amount' disabled='')
              .form-row.mb-2.contributionsOnly.d-none
                .col-md-6
                  label.small.mb-1(for='txnBorrowerName') Borrower Name
                  select#txnBorrowerName.form-control.selectpicker(type='text' name='borrowerName')
                    option(value='' selected='') Borrower Name
                    for x in borrowers
                      if (x.status == 'Verified' && x.type == 'Member')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='txnBorrowerAcctNo') Borrower G-Cash No.
                  .input-group.mb-1
                    .input-group-prepend
                      span.input-group-text +63
                    input#txnBorrowerAcctNo.form-control(type='text' name='borrowerAcctNo' minlength='10' maxlength='10' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='txnPostedBy') Assigned Loan Processor
                  select#txnPostedBy.form-control.selectpicker(type='text' name='postedBy')
                    option(value='' selected='') Assigned Loan Processor
                    for x in employees
                      if (x.type == 'Loan Processor')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='txnReferenceNo') G-Cash Reference No.
                  input#txnReferenceNo.form-control(type='text' name='referenceNo' minlength='10' maxlength='10')
              .form-row.mb-2
                .col-md-12
                  label.small.mb-1(for='txnMessage') Message
                  textarea#txnMessage.form-control(name='message')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit

  if title.indexOf("Manage Loans") != -1
    - let loanTerm = ["6", "12", "18", "24", "30", "36", "42", "48", "54", "60"]
    - let purposeOfLoan = ["Living Cost","Educational","Medical or Hospitalization","Purchasing Appliance","Travel or Vacation","Entertainment","Own Business","Wedding","House Repair","Repayments","Others"]
    #addLoanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='addLoanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#addLoanModalLabel.modal-title Add New Loan
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addLoan(method='POST' action='/loans')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='name') Borrower Name
                  select#name.form-control.selectpicker(type='text' name='borrowerID')
                    option(value='' selected='') Borrower Name
                    for x in borrowers
                      if (x.status == 'Verified')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='type') Borrower Type
                  input#type.form-control(type='text' name='borrowerType' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='loanPurpose') Purpose of Loan
                  select#loanPurpose.form-control.selectpicker(type='text' name='purposeOfLoan')
                    option(value='' selected='') Purpose of Loan
                    for x in purposeOfLoan
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='amount') Loan Amount
                  input#amount.form-control(type="number" step="100" min="5000" max="500000" name='loanAmount')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='interest') Monthly Interest Rate
                  input#interest.form-control(type="number" step="1" min="3" name='monthlyInterestRate' disabled='')
                .col-md-6
                  label.small.mb-1(for='term') Loan Term
                  select#term.form-control.selectpicker(type='text' name='loanTerm')
                    option(value='' selected='') Loan Term
                    for x in loanTerm
                      option(value=x) #{x} months
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #deleteLoanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='deleteLoanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#deleteLoanModalLabel.modal-title Delete Confirmation
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          .modal-body
            p Are you sure you want to delete loan no.  
              span#deleteLoanNum 
              |  of 
              span#deleteBorrowerName
              | ? This action cannot be undone.
          .modal-footer
            button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
            a#deleteLoan.btn.btn-primary(href='') Yes, delete it
    #updateLoanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='updateLoanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#updateLoanModalLabel.modal-title 
              span#updateTitle Update 
              span#updateLoanNum
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#updateLoan(method='POST')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='borrowerName') Borrower Name
                  select#borrowerName.form-control.selectpicker(type='text' name='borrowerID' disabled='')
                    option(value='' selected='') Borrower Name
                    for x in borrowers
                      if (x.status == 'Verified')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='borrowerType') Borrower Type
                  input#borrowerType.form-control(type='text' name='borrowerType' disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='purposeOfLoan') Purpose of Loan
                  input#purposeOfLoan.form-control(type='text' name='purposeOfLoan' disabled='')
                .col-md-6
                  label.small.mb-1(for='loanAmount') Loan Amount
                  input#loanAmount.form-control(type="number" step="100" min="5000" name='loanAmount' disabled='')
              .form-row.mb-2.processingOnly.d-none
                .col-md-6
                  label.small.mb-1(for='monthlyInterestRate') Monthly Interest Rate
                  input#monthlyInterestRate.form-control(type="number" step="1" min="3" name='monthlyInterestRate' disabled='')
                .col-md-6
                  label.small.mb-1(for='loanTerm') Loan Term
                  select#loanTerm.form-control.selectpicker(type='text' name='loanTerm'  disabled='')
                    option(value='' selected='' disabled='') Loan Term
                    for x in loanTerm
                      option(value=x) #{x} months
              .form-row.mb-2
                .col-md-6 
                  label.small.mb-1(for='status') Status
                  select#status.form-control.selectpicker(type='text' name='status')
                    option(value='' selected='') Status
                     - let status = ["Processing", "Approved", "Declined", "Loan Release", "Open", "Fully Paid", "Loan Debt"]
                    for x in status
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='reviewedBy') Assigned Loan Officer
                  select#reviewedBy.form-control.selectpicker(type='text' name='reviewedBy')
                    option(value='' selected='') Assigned Loan Officer
                    for x in employees
                      if (x.type == 'Loan Officer')
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName}
              .form-row.mb-2
                .col-md-6.loanReleaseOnly.d-none
                  label.small.mb-1(for='newProceedsAmount') New Proceeds of Loan
                  input#newProceedsAmount.form-control(type='number' min='0' name='newProceedsAmount' disabled='')
                .col-md-6.fullyPaidOnly.d-none
                  label.small.mb-1(for='balance') Remaining Balance
                  input#balance.form-control(type='text' name='balance' disabled='')
                .col-md-6.addTransactionOnly.d-none
                  label.small.mb-1(for='borrowerAcctNo') Borrower G-Cash No.
                  .input-group.mb-1
                    .input-group-prepend
                      span.input-group-text +63
                    input#borrowerAcctNo.form-control(type='text' name='borrowerAcctNo' minlength='10' maxlength='10' disabled='')
              .form-row.mb-2.addTransactionOnly.d-none
                .col-md-6
                  label.small.mb-1(for='postedBy') Assigned Loan Processor
                  select#postedBy.form-control.selectpicker(type='text' name='postedBy')
                    option(value='' selected='') Assigned Loan Processor
                    for x in employees
                      if (x.type == 'Loan Processor')
                        - let mobileNum = (x.account && x.account.number) ? x.account.number : x.profile.mobileNum;
                        option(value=x._id) #{x.profile.firstName} #{x.profile.lastName} - #{mobileNum} 
                .col-md-6
                  label.small.mb-1(for='referenceNo') G-Cash Reference No.
                  input#referenceNo.form-control(type='text' name='referenceNo' minlength='10' maxlength='10')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
  
  if title.indexOf("Profile") != -1
    #codeModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='codeModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#codeModalLabel.modal-title Mobile Number Verification
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form(method='POST' action='/verifyMobileNum')
            input(type='hidden', name='_csrf', value=_csrf)
            input(type='hidden', name='mobileNum', value=user.profile.mobileNum)
            .modal-body
              p VMO EZ Loan will send a text message with a 6-digit verification code.
              .form-row
                .form-group
                  input#code.form-control(type='text' placeholder='Enter code' name='code' minlength='6' maxlength='6')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Verify
  
  if title.indexOf("Account Management - Loans") != -1
    #loanModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='loanModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#loanModalLabel.modal-title Loan Application
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#addCredits(method='POST' action='/credits')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              - let interestRate = (user.type == "Member") ? 3: 5;
              - let totalUsedCreditLimit = (loans) ? loans.filter(({status}) => status != "Declined").reduce((a, b) => parseFloat(a) + parseFloat(b.principalRemaining), 0) : '0.00';
              - let remainingCreditLimit = (parseFloat(user.totalCreditLimit) - parseFloat(totalUsedCreditLimit)).toFixed(2);
              p 
                | The amount that you can borrow varies depending on your submitted documents and credit evaluation. 
                br
                | Continuing Interest of #{interestRate}% per month against Outstanding Balance after the loan terms.
              .form-row.mb-2
                label.small.mb-1(for='loanAmount') Loan Amount
                input#loanAmount.form-control(type="number" step="100" min="5000" max=remainingCreditLimit name='loanAmount' value=remainingCreditLimit)
              .form-row.mb-2
                label.small.mb-1(for='purposeOfLoan') Purpose of Loan
                select#purposeOfLoan.form-control.selectpicker(type='text' name='purposeOfLoan')
                  option(value='' selected='') Purpose of Loan
                  - let purposeOfLoan = ["Living Cost","Educational","Medical or Hospitalization","Purchasing Appliance","Travel or Vacation","Entertainment","Own Business","Wedding","House Repair","Repayments","Others"]
                  for x in purposeOfLoan
                    option(value=x) #{x}
              .form-row.mb-2.othersOnly.d-none
                label.small.mb-1(for='purposeOfLoanOthers') Others
                input#purposeOfLoanOthers.form-control(type="text" name='purposeOfLoanOthers')
              .form-row.mb-2
                label.small.mb-1(for='loanTerm') Loan Term
                select#loanTerm.form-control.selectpicker(type='text' name='loanTerm')
                  option(value='' selected='') Loan Term
                  - let loanTerm = ["6", "12", "18", "24", "30", "36", "42", "48", "54", "60"]
                  for x in loanTerm
                    option(value=x) #{x} months
              .form-row.mb-2
                .custom-control.custom-checkbox
                  input#termsAndCondition.custom-control-input(type='checkbox' name='termsAndCondition' value='false')
                  label.custom-control-label(for='termsAndCondition')
                    | I agree with the 
                    a Terms and Conditions
                    |  of VMO EZ Loan.
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
  
  if title.indexOf("Account Management - Loan Details") != -1
    #repaymentModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='repaymentModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#repaymentModalLabel.modal-title Add Repayment
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form(method='POST' action='/repayments/' + loan.requestedBy._id + '/' + loan._id)
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              p 
                | You can pay your repayment thru G-Cash. Check account numbers below.
                br
                | Please note your G-Cash reference number.
              .form-row.mb-2
                .col-md-6
                  -let amountDue = (schedule.amountDue) ? (schedule.paymentAmount) ? (parseFloat(schedule.amountDue) - parseFloat(schedule.paymentAmount) < 0.00) ? '0.00' : parseFloat(schedule.amountDue) - parseFloat(schedule.paymentAmount) : (parseFloat(schedule.amountDue)).toFixed(2) : '0.00'
                  label.small.mb-1(for='amount') Amount
                  input#amount.form-control(type="number" min='0.00' step='0.01' name='amount' value=amountDue)
                .col-md-6
                  label.small.mb-1(for='senderNum') Sender Number
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    - let borrowerAccountNum = (loan.requestedBy.account && loan.requestedBy.account.number) ? loan.requestedBy.account.number : loan.requestedBy.profile.mobileNum;
                    input#senderNum.form-control(type="text" name='senderNum' minlength='10' maxlength='10' value=borrowerAccountNum)
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='postedBy') Receiver Number
                  select#postedBy.form-control.selectpicker(type='text' name='postedBy')
                    option(value='' selected='') Receiver Number
                    for x in employees
                      if (x.type == 'Loan Processor')
                        - let mobileNum = (x.account && x.account.number) ? x.account.number : x.profile.mobileNum;
                        option(value=x._id) #{mobileNum} - #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='referenceNo') G-Cash Reference No.
                  input#referenceNo.form-control(type="text" name='referenceNo' minlength='10' maxlength='10')
              .form-row.mb-2
                .col-md-12
                  label.small.mb-1(for='message') Message
                  textarea#message.form-control(name='message' placeholder='(Optional)')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
  
  if title.indexOf("Account Management - Contributions") != -1
    #contributionModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='contributionModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#contributionModalLabel.modal-title Add Contribution
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form(method='POST' action='/contributions')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              p 
                | You can deposit your contributions thru G-Cash. Check account numbers below.
                br
                | Please note your G-Cash reference number.
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='amount') Amount
                  input#amount.form-control(type="number" min='300' step='100' name='amount' value=user.sharesPerPayDay)
                .col-md-6
                  label.small.mb-1(for='senderNum') Sender Number
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    - let borrowerAccountNum = (user.account && user.account.number) ? user.account.number : user.profile.mobileNum;
                    input#senderNum.form-control(type="text" name='senderNum' minlength='10' maxlength='10' value=borrowerAccountNum)
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='postedBy') Receiver Number
                  select#postedBy.form-control.selectpicker(type='text' name='postedBy')
                    option(value='' selected='') Receiver Number
                    for x in employees
                      if (x.type == 'Loan Processor')
                        - let mobileNum = (x.account && x.account.number) ? x.account.number : x.profile.mobileNum;
                        option(value=x._id) #{mobileNum} - #{x.profile.firstName} #{x.profile.lastName}
                .col-md-6
                  label.small.mb-1(for='referenceNo') G-Cash Reference No.
                  input#referenceNo.form-control(type="text" name='referenceNo' minlength='10' maxlength='10')
              .form-row.mb-2
                .col-md-12
                  label.small.mb-1(for='message') Message
                  textarea#message.form-control(name='message' placeholder='(Optional)')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit
    #withdrawalModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='withdrawalModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#withdrawalModalLabel.modal-title Withdrawal Request
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form(method='POST' action='/withdrawalRequest')
            input(type='hidden', name='_csrf', value=_csrf)
            .modal-body
              p 
                | You will receive an SMS when your withdrawal request has been approved and your funds are already available. 
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='receiverNumber') Receiver Number
                  .input-group
                    .input-group-prepend
                      span.input-group-text +63
                    input#receiverNumber.form-control(type="text" name='receiverNumber' minlength='10' maxlength='10' value=user.profile.mobileNum disabled='')
                .col-md-6
                  label.small.mb-1(for='contributions') Total Contributions
                  - let totalFund = transactions.filter(obj => (obj.type == "Withdrawals" || obj.type == "Contributions") && obj.status == "Posted").reduce((a, b) => parseFloat(a) + parseFloat(b.amount), 0);
                  input#contributions.form-control(type='number' min='0.00' max=totalFund name='contributions' value=totalFund disabled='')
              .form-row.mb-2
                .col-md-6
                  label.small.mb-1(for='reason') Reason
                  select#reason.form-control.selectpicker(type='text' name='reason')
                    option(value='' selected='') Reason
                    - let reasons = ["Living Cost", "Educational", "Medical/Hospitalization","Purchasing Appliance","Travel/Vacation","Entertainment","Own Business","Wedding","House Repair","Repayments","Others"]
                    for x in reasons
                      option(value=x) #{x}
                .col-md-6
                  label.small.mb-1(for='amount') Amount
                  input#amount.form-control(type="number" step="100.00" min="0.00" max=totalFund name='amount')
            .modal-footer
              button.btn.btn-secondary(type='button' data-dismiss='modal') Cancel
              button.btn.btn-primary(type='submit') Submit

  if title.indexOf("KYC Declaration") != -1
    #signatureModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='signatureModalLabel' aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5#signatureModalLabel.modal-title Signature
            button.close(type='button' data-dismiss='modal' aria-label='Close')
              span(aria-hidden='true') ×
          form#signatureFileForm(method='POST' enctype='multipart/form-data' action='/upload/signature')
            .modal-body
              .form-group.md-4
                .form-check.form-check-inline
                  input#companyIdOption.form-check-input(type='radio' name='signatureType' value='Data URL' checked='')
                  label.form-check-label(for='signaturePadOption') Signature Pad
                .form-check.form-check-inline
                  input#coeOption.form-check-input(type='radio' name='signatureType' value='File')
                  label.form-check-label(for='uploadPicOption') Upload Picture
              .text-center.signaturePad
                #sig
              .uploadSignature
                input(type='hidden', name='_csrf', value=_csrf)
                .form-row
                  .form-group.col-md-12.mb-md-0
                    .custom-file
                      input#signatureFile.custom-file-input(type='file' name='signatureFile')
                      label.custom-file-label(for='signatureFile') Choose file
            .modal-footer
              button#clear.btn.btn-secondary(type='button') Clear
              button#redrawButton.btn.btn-primary(type='button' data-dismiss='modal') Done
extends ../layout2

block content
  #content-wrapper.d-flex.flex-column
    #content.landing
      include ../partials/page-topbar
      main
        include ../partials/page-header
        include ../partials/page-flash
        .container-fluid
          .row
            if user.userId.type == "Admin" || (user.userId.type == "Employee" && user.type == "Loan Officer")
              .col-lg-6.col-xl-3.mb-4
                .card.bg-primary.text-white.h-100
                  .card-body
                    .d-flex.justify-content-between.align-items-center
                      .me-3
                        .text-white-75.small Registered Borrowers
                        - let registeredBorrower = borrowers.reduce((a, b) => parseFloat(a) + parseFloat(b.count), 0);
                        .text-lg.fw-bold #{registeredBorrower}
                      i.fas.fa-user.fa-2x.text-white-300
                  .card-footer.bg-primary.d-flex.align-items-center.justify-content-between.small
                    a.text-white.stretched-link(href='/borrowers') View Borrowers
                    .text-white
                      i.fas.fa-angle-right 
              .col-lg-6.col-xl-3.mb-4
                .card.bg-warning.text-white.h-100
                  .card-body
                    .d-flex.justify-content-between.align-items-center
                      .me-3
                        .text-white-75.small Borrowers Application
                        - let pendingBorrowers = borrowers.reduce((a, b) => parseFloat(a) + parseFloat(b.borrowers.filter(obj => obj.status == "Pending for Review").length > 0 ? b.borrowers.filter(obj => obj.status == "Pending for Review")[0].count : 0), 0);
                        .text-lg.fw-bold #{pendingBorrowers}
                      i.fas.fa-address-card.fa-2x.text-white-300
                  .card-footer.bg-warning.d-flex.align-items-center.justify-content-between.small
                    a.text-white.stretched-link(href='/borrowers') Manage Borrowers
                    .text-white
                      i.fas.fa-angle-right 
            else 
              .col-lg-6.col-xl-3.mb-4
                .card.bg-primary.text-white.h-100
                  .card-body
                    .d-flex.justify-content-between.align-items-center
                      .me-3
                        .text-white-75.small Not Posted Contrbutions
                        - let processingContributions = transactions.filter(obj => obj._id == "Contributions").length > 0 ? transactions.filter(obj => obj._id == "Contributions")[0].transactions.filter(obj => obj.status == "Processing").length > 0 ? transactions.filter(obj => obj._id == "Contributions")[0].transactions.filter(obj => obj.status == "Processing")[0].count : 0 : 0;
                        .text-lg.fw-bold #{processingContributions}
                      i.fas.fa-clipboard.fa-2x.text-white-300
                  .card-footer.bg-primary.d-flex.align-items-center.justify-content-between.small
                    a.text-white.stretched-link(href='/transactions') Manage Contributions
                    .text-white
                      i.fas.fa-angle-right 
              .col-lg-6.col-xl-3.mb-4
                .card.bg-warning.text-white.h-100
                  .card-body
                    .d-flex.justify-content-between.align-items-center
                      .me-3
                        .text-white-75.small Not Posted Repayments
                        - let processingRepayments = transactions.filter(obj => obj._id == "Repayments").length > 0 ? transactions.filter(obj => obj._id == "Repayments")[0].transactions.filter(obj => obj.status == "Processing").length > 0 ? transactions.filter(obj => obj._id == "Repayments")[0].transactions.filter(obj => obj.status == "Processing")[0].count : 0 : 0;
                        .text-lg.fw-bold #{processingRepayments}
                      i.fas.fa-money-check.fa-2x.text-white-300
                  .card-footer.bg-warning.d-flex.align-items-center.justify-content-between.small
                    a.text-white.stretched-link(href='/transactions') Manage Repayments
                    .text-white
                      i.fas.fa-angle-right          
            .col-lg-6.col-xl-3.mb-4
              .card.bg-success.text-white.h-100
                .card-body
                  .d-flex.justify-content-between.align-items-center
                    .me-3
                      .text-white-75.small Loans Application
                      - let processingLoans = loans.filter(obj => obj._id == "Processing").length > 0 ? loans.filter(obj => obj._id == "Processing")[0].count : 0;
                      .text-lg.fw-bold #{processingLoans}
                    i.fas.fa-balance-scale.fa-2x.text-white-300
                .card-footer.bg-success.d-flex.align-items-center.justify-content-between.small
                  a.text-white.stretched-link(href='/loans') Manage Applications
                  .text-white
                    i.fas.fa-angle-right 
            .col-lg-6.col-xl-3.mb-4
              .card.bg-danger.text-white.h-100
                .card-body
                  .d-flex.justify-content-between.align-items-center
                    .me-3
                      .text-white-75.small Withdrawal Requests
                      - let processingWithdrawals = withdrawalRequests.filter(obj => obj._id == "Processing").length > 0 ? withdrawalRequests.filter(obj => obj._id == "Processing")[0].count : 0;
                      .text-lg.fw-bold #{processingWithdrawals}
                    i.fas.fa-cash-register.fa-2x.text-white-300 
                .card-footer.bg-danger.d-flex.align-items-center.justify-content-between.small
                  a.text-white.stretched-link(href='/withdrawals') Manage Requests
                  .text-white
                    i.fas.fa-angle-right 
          .row
            .col-xl-6.col-lg-6
              if user.userId.type == "Admin" || (user.userId.type == "Employee" && user.type == "Loan Officer")
                // Bar Chart
                .card.shadow.mb-4
                  .card-header.py-3
                    h6.m-0.font-weight-bold.text-primary Contribution Chart
                  .card-body
                    .chart-bar
                      canvas#myContributionChart
              .card.shadow.mb-4
                .card-header.py-3
                  h6.m-0.font-weight-bold.text-primary Financial Statements
                .list-grouplist-group-flush
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action.bg-gray-300
                    .me-3.font-weight-bold
                      | Share Capital Statement
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | A. Contributions 
                    - let contributions = summary.filter(obj => obj._id == "Contributions").length > 0 ? summary.filter(obj => obj._id == "Contributions")[0].total["$numberDecimal"] : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(contributions).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | B. Withdrawals
                    - let withdrawals = summary.filter(obj => obj._id == "Withdrawals").length > 0 ? summary.filter(obj => obj._id == "Withdrawals")[0].total["$numberDecimal"] : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(withdrawals).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | C. Total Share Capital (A + B)
                    - let totalCapital = parseFloat(contributions) + parseFloat(withdrawals);
                    .fw-500.text-dark ₱ #{totalCapital.toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    - let monthToday = (new Date()).getMonth() + 1;
                    .me-3
                      | D. Average Share Capital (C / #{monthToday})
                    - let aveCapital = parseFloat(totalCapital) / monthToday;
                    .fw-500.text-dark ₱ #{aveCapital.toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action.bg-gray-300
                    .me-3.font-weight-bold
                      | Loans Statement
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | E. Loans Released (Principal)
                    - let loansReleased = summary.filter(obj => obj._id == "Release").length > 0 ? summary.filter(obj => obj._id == "Release")[0].total["$numberDecimal"] : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(loansReleased).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | F. Loan Repayments
                    - let loansRepayments = summary.filter(obj => obj._id == "Repayments").length > 0 ? summary.filter(obj => obj._id == "Repayments")[0].total["$numberDecimal"] : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(loansRepayments).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | G. Loans Receivable (E + F)
                    - let loansReceivables = parseFloat(loansReleased) + parseFloat(loansRepayments);
                    .fw-500.text-dark ₱ #{parseFloat(loansReceivables).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action.bg-gray-300
                    .me-3.font-weight-bold
                      | Income Statement
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | H. Interest Income (Interest Paid by Members)
                    - let interestPaidByMember = interest.filter(obj => obj._id[0] == "Member").length > 0 ? interest.filter(obj => obj._id[0] == "Member")[0].totalInterestPaid["$numberDecimal"] : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(interestPaidByMember).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | Other Income 
                      br
                      .medium
                        | &ensp; I. Membership Fees
                      .medium
                        | &ensp; J. Service Fee and Interest Paid by Non-Members
                      .medium
                        | &ensp; K. Total Other Income (I + J)
                      - let membershipFees = summary.filter(obj => obj._id == "Fees").length > 0 ? summary.filter(obj => obj._id == "Fees")[0].total["$numberDecimal"] : 0.00;
                      - let otherIncome = parseFloat(loansRepayments) + parseFloat(loansReleased)  - parseFloat(interestPaidByMember);
                      - let totalOtherIncome = parseFloat(membershipFees) + parseFloat(otherIncome);
                    .fw-500.text-dark 
                      |
                      br
                      .medium.text-right
                        | ₱ #{parseFloat(membershipFees).toFixed(2)}
                      .medium.text-right
                        | ₱ #{parseFloat(otherIncome).toFixed(2)}
                      .medium.text-right
                        | ₱ #{parseFloat(totalOtherIncome).toFixed(2)}  
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | L. Total Income (H + K)
                    - let totalIncome = parseFloat(interestPaidByMember) + parseFloat(totalOtherIncome);
                    .fw-500.text-dark ₱ #{parseFloat(totalIncome).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | M. Expenses
                    - let expenses = summary.filter(obj => obj._id == "Expenses").length > 0 ? summary.filter(obj => obj._id == "Expenses")[0].total["$numberDecimal"] : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(expenses).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action.bg-gray-300
                    .me-3.font-weight-bold
                      | N. Balance (C + G + I + M)
                    - let balance = parseFloat(contributions) + parseFloat(withdrawals) + parseFloat(loansRepayments) + parseFloat(loansReleased) + parseFloat(membershipFees) + parseFloat(expenses);
                    .fw-500.text-dark ₱ #{parseFloat(balance).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | O. Net Surplus Before Distribution (L + M)
                    - let netSurplusBefore = parseFloat(totalIncome) + parseFloat(expenses);
                    .fw-500.text-dark ₱ #{parseFloat(netSurplusBefore).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | P. General Reserved Funds (10% of O)
                    - let reservedFunds = parseFloat(netSurplusBefore) * .10;
                    .fw-500.text-dark ₱ #{parseFloat(reservedFunds).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action.bg-gray-300
                    .me-3.font-weight-bold
                      | Q. Net Surplus for Distribution (O - P)
                    - let netSurplusAfter = parseFloat(netSurplusBefore) - parseFloat(reservedFunds);
                    .fw-500.text-dark ₱ #{parseFloat(netSurplusAfter).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | R. Dividend (Interest on Share Capital)
                    - let sumOfShareCapitalAndIncome = parseFloat(aveCapital) + parseFloat(interestPaidByMember);
                    - let aveShareCapital = parseFloat(aveCapital) / parseFloat(sumOfShareCapitalAndIncome);
                    - let aveIncome = parseFloat(interestPaidByMember) / parseFloat(sumOfShareCapitalAndIncome);
                    - let dividend = (aveShareCapital) ? parseFloat(aveShareCapital) * parseFloat(netSurplusAfter) : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(dividend).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action
                    .me-3
                      | S. Patronage Refund
                    - let patronageRefund = (aveIncome) ? parseFloat(aveIncome) * parseFloat(netSurplusAfter) : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(patronageRefund).toFixed(2)}
                  .list-group-item.d-flex.align-items-center.justify-content-between.list-group-item-action.bg-gray-300
                    .me-3.font-weight-bold
                      | T. Total Balance (N - Q)
                    - let totalbalance = (balance) ? parseFloat(balance) - parseFloat(netSurplusAfter) : 0.00;
                    .fw-500.text-dark ₱ #{parseFloat(totalbalance).toFixed(2)}
            .col-xl-6.col-lg-6
              if user.userId.type == "Admin" || (user.userId.type == "Employee" && user.type == "Loan Officer")
                // Donut Chart
                .card.shadow.mb-4
                  // Card Header - Dropdown
                  .card-header.py-3
                    h6.m-0.font-weight-bold.text-primary Borrowers Chart
                  // Card Body
                  .card-body
                    .chart-pie.pt-4
                      canvas#myBorrowerChart
                    .mt-4.text-center.small
                      span.mr-2
                        i.fas.fa-circle.text-primary
                        i#borrower1
                      span.mr-2
                        i.fas.fa-circle.text-success
                        i#borrower2

              // Area Chart
              .card.shadow.mb-4
                .card-header.py-3
                  h6.m-0.font-weight-bold.text-primary Loans Released Chart
                .card-body
                  .chart-area
                    canvas#myLoansReleaseChart
              // Area Chart
              .card.shadow.mb-4
                .card-header.py-3
                  h6.m-0.font-weight-bold.text-primary Loans Repayments Chart
                .card-body
                  .chart-area
                    canvas#myLoansRepaymentsChart
              // Area Chart
              .card.shadow.mb-4.bg-primary.border-0
                .card-body
                  h5.text-white-50 Balance
                  .mb-4
                    span.display-4.text-white ₱ #{parseFloat(balance).toFixed(2)}
                    - let date = (new Date()).toString().split(' ');
                    - let dateToday =  date[1] + ' ' + date[2] + ', ' + date[3];
                    span.text-white-50 as of #{dateToday}
    include ../partials/page-footer